name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: Ubuntu-18.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Qt
      run: |
           sudo apt update
           sudo apt install -y qtbase5-dev
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Download tools
      run: |
           wget "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O ${{github.workspace}}/build/linuxdeployqt
           wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" -O ${{github.workspace}}/build/appimagetool
    - name: Run linuxdeployqt
      run: |
           export QT_SELECT=qt5
           mkdir ${{github.workspace}}/build/appimage
           cp ${{github.workspace}}/default.desktop ${{github.workspace}}/build/appimage/default.desktop
           cp ${{github.workspace}}/build/src/game-installer ${{github.workspace}}/build/appimage/
           cd ${{github.workspace}}/build/appimage
           chmod +x ../linuxdeployqt
           chmod +x ../appimagetool
           ../linuxdeployqt game-installer -verbose=2 -appimage
           cd ${{github.workspace}}/build
           ./appimagetool appimage
           mv *.AppImage Gameux-installer_amd64.AppImage
    - uses: actions/upload-artifact@v2
      with:
          name: Gameux installer
          path: ${{github.workspace}}/build/*.AppImage
    # - name: Test
      # working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      # run: ctest -C ${{env.BUILD_TYPE}}
      
